# =============================================================================
# FITNESS APPLICATION - MAIN CONFIGURATION (YAML)
# =============================================================================

# Application Configuration
spring:
  application:
    name: ${APP_NAME:fitness-application}
  
  # Database Configuration (H2 for development, PostgreSQL for production)
  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:testdb}
    driver-class-name: ${DATABASE_DRIVER:org.h2.Driver}
    username: ${DATABASE_USERNAME:sa}
    password: ${DATABASE_PASSWORD:password}
  
  # H2 Console Configuration
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:true}
  
  # JPA Configuration
  jpa:
    database-platform: ${JPA_DATABASE_PLATFORM:org.hibernate.dialect.H2Dialect}
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:true}
    format-sql: ${JPA_FORMAT_SQL:true}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  
  # Mail Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${MAIL_SMTP_STARTTLS:true}
  
  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}
  
  # Security OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope:
              - openid
              - profile
              - email
            redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
          
          github:
            client-id: ${GITHUB_CLIENT_ID:your-github-client-id}
            client-secret: ${GITHUB_CLIENT_SECRET:your-github-client-secret}
            scope:
              - read:user
              - user:email
            redirect-uri: ${GITHUB_REDIRECT_URI:http://localhost:8080/login/oauth2/code/github}
        
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  error:
    include-stacktrace: ${ERROR_INCLUDE_STACKTRACE:on_param}
    include-message: ${ERROR_INCLUDE_MESSAGE:always}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-jwt-secret-key}
  expiration: ${JWT_EXPIRATION:86400000}

# AI Service Configuration
ai:
  gemini:
    api:
      key: ${GEMINI_API_KEY:your-gemini-api-key}
      url: ${GEMINI_API_URL:https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent}

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: ${API_DOCS_PATH:/api-docs}
    enabled: ${API_DOCS_ENABLED:true}
  swagger-ui:
    path: ${SWAGGER_UI_PATH:/swagger-ui.html}
    operations-sorter: method
    tags-sorter: alpha
    try-it-out-enabled: ${SWAGGER_TRY_IT_OUT:true}
    enabled: ${SWAGGER_ENABLED:true}
  show-actuator: ${SWAGGER_SHOW_ACTUATOR:true}

# Logging Configuration
logging:
  level:
    com.fitness_application: ${LOG_LEVEL:DEBUG}
    org.springframework.security: ${SECURITY_LOG_LEVEL:DEBUG}
    org.hibernate.SQL: ${HIBERNATE_SQL_LOG_LEVEL:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: ${HIBERNATE_BINDER_LOG_LEVEL:TRACE}
    root: ${ROOT_LOG_LEVEL:INFO}
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
  file:
    name: ${LOG_FILE_NAME:logs/fitness-application.log}

# Application Custom Configuration
app:
  oauth2:
    authorized-redirect-uris: ${OAUTH2_REDIRECT_URIS:http://localhost:3000/oauth2/redirect}
  
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}

# Management and Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info,metrics,env,configprops}
  endpoint:
    health:
      show-details: ${HEALTH_SHOW_DETAILS:when_authorized}
  info:
    env:
      enabled: ${INFO_ENV_ENABLED:true}
